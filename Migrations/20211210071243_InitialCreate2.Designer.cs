// <auto-generated />
using System;
using AudioRecognition.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AudioRecognition.Migrations
{
    [DbContext(typeof(ASRContext))]
    [Migration("20211210071243_InitialCreate2")]
    partial class InitialCreate2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("AudioRecognition.Model.FlashRecognitionResult", b =>
                {
                    b.Property<string>("Request_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Audio_duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Flash_result")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Request_id");

                    b.HasIndex("Username");

                    b.ToTable("FlashRecognitionResults");
                });

            modelBuilder.Entity("AudioRecognition.Model.LiveRecognitionResult", b =>
                {
                    b.Property<string>("Voice_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Voice_id");

                    b.HasIndex("Username");

                    b.ToTable("LiveRecognitionResults");
                });

            modelBuilder.Entity("AudioRecognition.Model.ShortRecognitionResult", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AudioDuration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("RequestId");

                    b.HasIndex("Username");

                    b.ToTable("ShortRecognitionResults");
                });

            modelBuilder.Entity("AudioRecognition.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AudioRecognition.Model.FlashRecognitionResult", b =>
                {
                    b.HasOne("AudioRecognition.Model.User", null)
                        .WithMany("FlashRecognitionResults")
                        .HasForeignKey("Username");
                });

            modelBuilder.Entity("AudioRecognition.Model.LiveRecognitionResult", b =>
                {
                    b.HasOne("AudioRecognition.Model.User", null)
                        .WithMany("LiveRecognitionResults")
                        .HasForeignKey("Username");
                });

            modelBuilder.Entity("AudioRecognition.Model.ShortRecognitionResult", b =>
                {
                    b.HasOne("AudioRecognition.Model.User", "User")
                        .WithMany("ShortRecognitionResults")
                        .HasForeignKey("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
